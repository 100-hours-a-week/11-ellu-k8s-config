# 템포 분산 트레이싱 설정
fullnameOverride: "tempo"
nameOverride: "tempo"

# Tempo configuration
tempo:
  repository: grafana/tempo
  tag: "2.6.0"
  pullPolicy: IfNotPresent

# Server configuration
server:
  http_listen_port: 3200
  grpc_listen_port: 9095

# 디스트리뷰터 (트레이스 수신)
distributor:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m

# 인제스터 (스토리지 쓰기)
ingester:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      memory: 1Gi
      cpu: 500m

# 쿼리어 (스토리지 읽기)
querier:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m

# 쿼리 프론트엔드
queryFrontend:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 100m

# 컴팩터 (데이터 관리)
compactor:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      memory: 1Gi
      cpu: 500m

# Storage configuration
storage:
  trace:
    backend: local
    local:
      path: /var/tempo/traces
    wal:
      path: /var/tempo/wal
    
    block:
      retention: 168h

# 퍼시스턴트 볼륨
persistence:
  enabled: true
  storageClassName: "ebs-sc"
  size: 50Gi
  accessModes:
    - ReadWriteOnce

# Service configuration
service:
  type: ClusterIP
  port: 3200

serviceGraph:
  enabled: true
  
metricsGenerator:
  enabled: true
  config:
    service_graphs:
      histogram_buckets: [0.1, 0.2, 0.4, 0.8, 1.6, 3.2, 6.4, 12.8]
    span_metrics:
      histogram_buckets: [0.002, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10]

# 서비스 모니터
serviceMonitor:
  enabled: true
  labels: {}
  interval: 15s
  scrapeTimeout: 10s
# 템포 분산 트레이싱 설정 (v1.45.0 호환)
fullnameOverride: "tempo"
nameOverride: "tempo"

# 글로벌 설정
global:
  image:
    repository: grafana/tempo
    tag: "2.6.0"
    pullPolicy: IfNotPresent

# 전역 스토리지 클래스
storage:
  trace:
    backend: local
    local:
      path: /var/tempo/traces
    wal:
      path: /var/tempo/wal

# 퍼시스턴트 볼륨 (전역)
persistence:
  enabled: true
  storageClass: "ebs-sc"
  size: 50Gi
  accessModes:
    - ReadWriteOnce

# 디스트리뷰터 설정
distributor:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m

# 인제스터 설정
ingester:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      memory: 1Gi
      cpu: 500m
  persistence:
    enabled: true
    storageClass: "ebs-sc"
    size: 50Gi
    accessModes:
      - ReadWriteOnce

# 쿼리어 설정
querier:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m

# 쿼리 프론트엔드
queryFrontend:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 100m

# 컴팩터 설정
compactor:
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      memory: 1Gi
      cpu: 500m

# 스토리지 설정
storage:
  trace:
    backend: local
    local:
      path: /var/tempo/traces
    wal:
      path: /var/tempo/wal
    block:
      retention: 168h

# 메트릭 생성기 (새로운 구조)
metricsGenerator:
  enabled: true
  replicas: 1
  nodeSelector:
    cloud-provider: aws
  config:
    service_graphs:
      histogram_buckets: [0.1, 0.2, 0.4, 0.8, 1.6, 3.2, 6.4, 12.8]
    span_metrics:
      histogram_buckets: [0.002, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10]
  remoteWriteUrl: http://kube-prometheus-stack-prometheus:9090/api/v1/write

# 메타 모니터링 (ServiceMonitor가 여기로 이동)
metaMonitoring:
  serviceMonitor:
    enabled: true
    interval: 15s
    scrapeTimeout: 10s

# 트레이스 수신기 설정
traces:
  jaeger:
    grpc:
      enabled: true
    thriftBinary:
      enabled: true
    thriftCompact:
      enabled: true
    thriftHttp:
      enabled: true
  zipkin:
    enabled: true
  otlp:
    http:
      enabled: true
      receiverConfig:
        endpoint: "0.0.0.0:4318"
    grpc:
      enabled: true
      receiverConfig:
        endpoint: "0.0.0.0:4317"

# 서비스 설정
service:
  type: ClusterIP
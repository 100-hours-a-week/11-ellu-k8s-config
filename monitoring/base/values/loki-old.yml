fullnameOverride: "loki"
nameOverride: "loki"

loki:
  image:
    repository: grafana/loki
    tag: "3.1.1"
    pullPolicy: IfNotPresent

  config: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9095

    common:
      path_prefix: /var/loki
      storage:
        filesystem:
          chunks_directory: /var/loki/chunks
          rules_directory: /var/loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    ruler:
      alertmanager_url: http://kube-prometheus-stack-alertmanager:9093

    # Retention policy
    limits_config:
      retention_period: 168h  # 7 days
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m

    chunk_store_config:
      max_look_back_period: 0s

    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h

    compactor:
      working_directory: /var/loki/boltdb-shipper-compactor
      shared_store: filesystem

    ingester:
      max_chunk_age: 1h
      chunk_idle_period: 3m
      chunk_block_size: 262144
      chunk_target_size: 1536000
      chunk_retain_period: 30s
      max_transfer_retries: 0
      wal:
        enabled: true
        dir: /var/loki/wal
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_encoding: snappy

# 배포 설정
replicas: 1

# AWS 노드에 배포
nodeSelector:
  cloud-provider: aws

resources:
  requests:
    memory: 256Mi
    cpu: 100m
  limits:
    memory: 512Mi
    cpu: 500m

# 퍼시스턴트 볼륨
persistence:
  enabled: true
  storageClassName: "ebs-sc"
  size: 30Gi
  accessModes:
    - ReadWriteOnce

# Service configuration
service:
  type: ClusterIP
  port: 3100

# ServiceMonitor for Prometheus scraping
serviceMonitor:
  enabled: true
  labels: {}
  interval: 15s
  scrapeTimeout: 10s

# Security context
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# Pod security context
podSecurityContext:
  fsGroup: 10001

# Promtail (log collector) configuration
promtail:
  enabled: true
  
  # Promtail configuration
  config:
    server:
      http_listen_port: 3101
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      # Kubernetes pods
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - docker: {}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            target_label: app
            replacement: $1
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_instance
              - __meta_kubernetes_pod_label_release
            regex: ^;*([^;]+)(;.*)?$
            target_label: instance
            replacement: $1
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            target_label: component
            replacement: $1
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_uid
            target_label: pod_uid
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: drop
            regex: ^$
            source_labels:
            - __meta_kubernetes_pod_label_name
          - action: labelmap
            regex: __meta_kubernetes_pod_annotation_(.+)

      # Kubernetes containers
      - job_name: kubernetes-pods-app
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - docker: {}
        relabel_configs:
          - action: drop
            regex: .+
            source_labels:
              - __meta_kubernetes_pod_label_name
          - source_labels:
              - __meta_kubernetes_pod_label_app
            target_label: __service__
          - source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
              - __service__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - __meta_kubernetes_namespace
              - __service__
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_uid
            target_label: pod_uid

  # Promtail resources
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 200m

  # ServiceMonitor for Promtail
  serviceMonitor:
    enabled: true

# Init container for setting up Loki
initContainer:
  enabled: true
  image:
    repository: grafana/loki
    tag: "3.1.1"
    pullPolicy: IfNotPresent
  command:
    - sh
    - -c
    - |
      mkdir -p /var/loki/chunks
      mkdir -p /var/loki/rules
      mkdir -p /var/loki/wal
      chown -R 10001:10001 /var/loki
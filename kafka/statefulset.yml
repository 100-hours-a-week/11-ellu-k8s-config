apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: looper-prod
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              chown -R 1000:1000 /var/lib/kafka/data
              chmod -R 755 /var/lib/kafka/data
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          securityContext:
            runAsUser: 0
        - name: wait-for-zookeeper
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z zookeeper.looper-prod.svc.cluster.local 2181; do echo waiting for zookeeper; sleep 2; done;']
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.9.0
          ports:
            - containerPort: 29092
              name: internal
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
            - name: kafka-config
              mountPath: /etc/kafka/server.properties
              subPath: server.properties
          env:
            - name: KAFKA_BROKER_ID
              value: "0"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper.looper-prod.svc.cluster.local:2181"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:29092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-0.kafka-headless.looper-prod.svc.cluster.local:29092"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
      volumes:
        - name: kafka-config
          configMap:
            name: kafka-config
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 10Gi
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: looper-prod
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              mkdir -p /var/lib/kafka/data /var/log/kafka
              chown -R 1000:1000 /var/lib/kafka/data
              chmod -R 755 /var/lib/kafka/data
              chown -R 1000:1000 /var/log/kafka
              chmod -R 755 /var/log/kafka
              
              # Clean up any KRaft metadata that might exist
              rm -f /var/lib/kafka/data/meta.properties
              rm -rf /var/lib/kafka/data/__cluster_metadata*
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
            - name: kafka-logs
              mountPath: /var/log/kafka
          securityContext:
            runAsUser: 0
        - name: wait-for-zookeeper
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z zookeeper.looper-prod.svc.cluster.local 2181; do
                echo "Waiting for zookeeper..."
                sleep 2
              done
              echo "Zookeeper is ready!"
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.9.0
          ports:
            - containerPort: 29092
              name: internal
            - containerPort: 9092
              name: external
          env:
            - name: KAFKA_CFG_FILE
              value: "/etc/kafka/server.properties"
          command:
            - sh
            - -exc
            - |
              /usr/bin/kafka-server-start /etc/kafka/server.properties
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
            - name: kafka-logs
              mountPath: /var/log/kafka
            - name: kafka-config
              mountPath: /etc/kafka
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          resources:
            requests:
              cpu: 250m
              memory: 1Gi
            limits:
              cpu: 500m
              memory: 1Gi
          readinessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 90
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: kafka-config
          configMap:
            name: kafka-config
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: kafka-logs
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 2Gi
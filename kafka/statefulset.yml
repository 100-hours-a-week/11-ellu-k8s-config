apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: looper-prod
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: wait-for-zookeeper
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z zookeeper.looper-prod.svc.cluster.local 2181; do
                echo "Waiting for zookeeper..."
                sleep 2
              done
              echo "Zookeeper is ready!"
        - name: fix-kafka-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              mkdir -p /bitnami/kafka
              chown -R 1001:1001 /bitnami/kafka
              chmod -R 755 /bitnami/kafka
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
          securityContext:
            runAsUser: 0
      containers:
        - name: kafka
          image: bitnami/kafka:3.6
          ports:
            - containerPort: 9092
              name: internal
          env:
            - name: KAFKA_CFG_BROKER_ID
              value: "0"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper.looper-prod.svc.cluster.local:2181"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-0.kafka-headless.looper-prod.svc.cluster.local:9092"
            - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
          resources:
            requests:
              cpu: 250m
              memory: 1Gi
            limits:
              cpu: 500m
              memory: 1Gi
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 60
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 120
            periodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 10Gi
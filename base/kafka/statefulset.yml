apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      nodeSelector:
        node-role.kubernetes.io/kafka: reserved
      tolerations:
        - key: "node-role.kubernetes.io/kafka"
          operator: "Equal"
          value: "reserved"
          effect: "NoSchedule"
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              mkdir -p /var/kafka-logs
              rm -rf /var/kafka-logs/lost+found
              chown -R 1000:1000 /var/kafka-logs
              chmod -R 755 /var/kafka-logs
              echo "Cleaned up /var/kafka-logs"
              ls -la /var/kafka-logs
          volumeMounts:
            - name: kafka-data
              mountPath: /var/kafka-logs
          securityContext:
            runAsUser: 0
      containers:
        - name: kafka
          image: apache/kafka:3.9.1
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 9093
              name: controller
          env:
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka-0.kafka-headless.looper-prod.svc.cluster.local:9093"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka.looper-prod.svc.cluster.local:9092"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_LOG_DIRS
              value: "/var/kafka-logs"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/kafka-logs
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 60
            periodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 10Gi